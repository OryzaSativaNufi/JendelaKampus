/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Parsistence.Buku;
import Parsistence.Kategori;
import static Parsistence.Skripsi_.kategoriCollection;
import java.awt.Color;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class DataBuku extends javax.swing.JPanel {

    ArrayList<Buku> Buku;

    public DataBuku() {
        initComponents();
        try {
            Buku = new ArrayList<>();
            initComponents();
            Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/perpus", "postgres", "5432");
            setTabelModel();
            getData((DefaultTableModel) jTableBuku.getModel());
            loadData();
        } catch (SQLException ex) {
            Logger.getLogger(DataBuku.class.getName()).log(Level.SEVERE, null, ex);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelMain = new javax.swing.JPanel();
        dataBuku = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableBuku = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButtonBatal = new javax.swing.JButton();
        jButtonTambah = new javax.swing.JButton();
        jButtonHapus = new javax.swing.JButton();
        TextFieldSearch = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        panelAdd = new javax.swing.JPanel();
        jButtonSimpan = new javax.swing.JButton();
        jButtonBatal2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        dataBuku4 = new javax.swing.JPanel();
        TextFieldID = new javax.swing.JTextField();
        TextFieldPenerbit = new javax.swing.JTextField();
        TextFieldISBN = new javax.swing.JTextField();
        TextFieldJudul = new javax.swing.JTextField();
        TextFieldBahasa = new javax.swing.JTextField();
        TextFieldPengarang = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButtonKategori = new javax.swing.JButton();

        setLayout(new java.awt.CardLayout());

        PanelMain.setBackground(new java.awt.Color(255, 255, 255));
        PanelMain.setLayout(new java.awt.CardLayout());

        dataBuku.setBackground(new java.awt.Color(255, 255, 255));
        dataBuku.setPreferredSize(new java.awt.Dimension(983, 638));

        jTableBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableBuku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableBukuMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTableBuku);

        jLabel1.setBackground(new java.awt.Color(229, 183, 137));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/IconBuku.png"))); // NOI18N
        jLabel1.setText("Data Buku");

        jButtonBatal.setBackground(new java.awt.Color(229, 183, 137));
        jButtonBatal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonBatal.setForeground(new java.awt.Color(255, 255, 255));
        jButtonBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/IconBatal.png"))); // NOI18N
        jButtonBatal.setText("BATAL");
        jButtonBatal.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jButtonBatalMouseMoved(evt);
            }
        });
        jButtonBatal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonBatalMouseExited(evt);
            }
        });
        jButtonBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBatalActionPerformed(evt);
            }
        });

        jButtonTambah.setBackground(new java.awt.Color(229, 183, 137));
        jButtonTambah.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonTambah.setForeground(new java.awt.Color(255, 255, 255));
        jButtonTambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/IconTambah.png"))); // NOI18N
        jButtonTambah.setText("TAMBAH");
        jButtonTambah.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jButtonTambahMouseMoved(evt);
            }
        });
        jButtonTambah.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonTambahMouseExited(evt);
            }
        });
        jButtonTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahActionPerformed(evt);
            }
        });

        jButtonHapus.setBackground(new java.awt.Color(229, 183, 137));
        jButtonHapus.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonHapus.setForeground(new java.awt.Color(255, 255, 255));
        jButtonHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/IconHapus.png"))); // NOI18N
        jButtonHapus.setText("HAPUS");
        jButtonHapus.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jButtonHapusMouseMoved(evt);
            }
        });
        jButtonHapus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonHapusMouseExited(evt);
            }
        });
        jButtonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusActionPerformed(evt);
            }
        });

        TextFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldSearchActionPerformed(evt);
            }
        });
        TextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TextFieldSearchKeyReleased(evt);
            }
        });

        jComboBox1.setBackground(new java.awt.Color(229, 183, 137));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Pilih --", "ID Buku", "ISBN", "Judul", "Kategori", "Bahasa", "Pengarang", "Penerbit", " ", " " }));
        jComboBox1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(229, 183, 137)));

        javax.swing.GroupLayout dataBukuLayout = new javax.swing.GroupLayout(dataBuku);
        dataBuku.setLayout(dataBukuLayout);
        dataBukuLayout.setHorizontalGroup(
            dataBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataBukuLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(dataBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dataBukuLayout.createSequentialGroup()
                        .addGroup(dataBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 951, Short.MAX_VALUE)
                            .addGroup(dataBukuLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dataBukuLayout.createSequentialGroup()
                        .addGroup(dataBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(dataBukuLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jButtonTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonHapus)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(58, 58, 58))))
        );
        dataBukuLayout.setVerticalGroup(
            dataBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dataBukuLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(dataBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );

        PanelMain.add(dataBuku, "card2");

        panelAdd.setBackground(new java.awt.Color(255, 255, 255));
        panelAdd.setPreferredSize(new java.awt.Dimension(983, 638));

        jButtonSimpan.setBackground(new java.awt.Color(229, 183, 137));
        jButtonSimpan.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonSimpan.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/IconSimpan.png"))); // NOI18N
        jButtonSimpan.setText("SIMPAN");
        jButtonSimpan.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jButtonSimpanMouseMoved(evt);
            }
        });
        jButtonSimpan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonSimpanMouseExited(evt);
            }
        });
        jButtonSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSimpanActionPerformed(evt);
            }
        });

        jButtonBatal2.setBackground(new java.awt.Color(229, 183, 137));
        jButtonBatal2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonBatal2.setForeground(new java.awt.Color(255, 255, 255));
        jButtonBatal2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/IconBatal.png"))); // NOI18N
        jButtonBatal2.setText("BATAL");
        jButtonBatal2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jButtonBatal2MouseMoved(evt);
            }
        });
        jButtonBatal2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonBatal2MouseExited(evt);
            }
        });
        jButtonBatal2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBatal2ActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(229, 183, 137));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/IconBuku.png"))); // NOI18N
        jLabel2.setText("Tambah Data Buku");

        dataBuku4.setBackground(new java.awt.Color(255, 255, 255));
        dataBuku4.setPreferredSize(new java.awt.Dimension(983, 638));

        TextFieldID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldIDActionPerformed(evt);
            }
        });
        TextFieldID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TextFieldIDKeyReleased(evt);
            }
        });

        TextFieldPenerbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldPenerbitActionPerformed(evt);
            }
        });
        TextFieldPenerbit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TextFieldPenerbitKeyReleased(evt);
            }
        });

        TextFieldISBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldISBNActionPerformed(evt);
            }
        });
        TextFieldISBN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TextFieldISBNKeyReleased(evt);
            }
        });

        TextFieldJudul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldJudulActionPerformed(evt);
            }
        });
        TextFieldJudul.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TextFieldJudulKeyReleased(evt);
            }
        });

        TextFieldBahasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldBahasaActionPerformed(evt);
            }
        });
        TextFieldBahasa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TextFieldBahasaKeyReleased(evt);
            }
        });

        TextFieldPengarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldPengarangActionPerformed(evt);
            }
        });
        TextFieldPengarang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TextFieldPengarangKeyReleased(evt);
            }
        });

        jLabel27.setText("ID Buku");

        jLabel28.setText("ISBN");

        jLabel29.setText("Judul");

        jLabel30.setText("Bahasa");

        jLabel31.setText("Pengarang");

        jLabel32.setText("Penerbit");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID Kategori", "Kategori"
            }
        ));
        jScrollPane5.setViewportView(jTable2);

        jButtonKategori.setBackground(new java.awt.Color(229, 183, 137));
        jButtonKategori.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonKategori.setForeground(new java.awt.Color(255, 255, 255));
        jButtonKategori.setText("BATAL");
        jButtonKategori.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jButtonKategoriMouseMoved(evt);
            }
        });
        jButtonKategori.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonKategoriMouseExited(evt);
            }
        });
        jButtonKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonKategoriActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dataBuku4Layout = new javax.swing.GroupLayout(dataBuku4);
        dataBuku4.setLayout(dataBuku4Layout);
        dataBuku4Layout.setHorizontalGroup(
            dataBuku4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataBuku4Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(dataBuku4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel28)
                    .addComponent(jLabel27)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32))
                .addGap(99, 99, 99)
                .addGroup(dataBuku4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TextFieldBahasa, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                    .addComponent(TextFieldPengarang)
                    .addComponent(TextFieldPenerbit)
                    .addComponent(TextFieldID)
                    .addComponent(TextFieldISBN)
                    .addComponent(TextFieldJudul))
                .addGap(18, 18, 18)
                .addGroup(dataBuku4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(209, Short.MAX_VALUE))
        );
        dataBuku4Layout.setVerticalGroup(
            dataBuku4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dataBuku4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(dataBuku4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addGap(41, 41, 41)
                .addGroup(dataBuku4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dataBuku4Layout.createSequentialGroup()
                        .addGroup(dataBuku4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextFieldISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28))
                        .addGap(33, 33, 33)
                        .addGroup(dataBuku4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextFieldJudul, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29))
                        .addGap(42, 42, 42)
                        .addGroup(dataBuku4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextFieldBahasa, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30))
                        .addGap(50, 50, 50)
                        .addGroup(dataBuku4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextFieldPengarang, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel31))
                        .addGap(43, 43, 43)
                        .addGroup(dataBuku4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextFieldPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel32)))
                    .addGroup(dataBuku4Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(195, 195, 195))
        );

        javax.swing.GroupLayout panelAddLayout = new javax.swing.GroupLayout(panelAdd);
        panelAdd.setLayout(panelAddLayout);
        panelAddLayout.setHorizontalGroup(
            panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelAddLayout.createSequentialGroup()
                                .addComponent(jButtonSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonBatal2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dataBuku4, javax.swing.GroupLayout.PREFERRED_SIZE, 1122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panelAddLayout.setVerticalGroup(
            panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBatal2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(dataBuku4, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        PanelMain.add(panelAdd, "card2");

        add(PanelMain, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void jTableBukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableBukuMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableBukuMouseClicked

    private void jButtonBatalMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBatalMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonBatalMouseMoved

    private void jButtonBatalMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBatalMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonBatalMouseExited

    private void jButtonBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBatalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonBatalActionPerformed

    private void jButtonTambahMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonTambahMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonTambahMouseMoved

    private void jButtonTambahMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonTambahMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonTambahMouseExited

    private void jButtonTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahActionPerformed
        PanelMain.removeAll();
        PanelMain.add(panelAdd);
        PanelMain.repaint();
        PanelMain.revalidate();

        TextFieldID.setText(setIDBuku());
        if (jButtonTambah.getText().equals("UBAH")) {
            dataTabel();
            jButtonSimpan.setText("UBAH");
        }
    }//GEN-LAST:event_jButtonTambahActionPerformed

    private void jButtonHapusMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonHapusMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonHapusMouseMoved

    private void jButtonHapusMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonHapusMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonHapusMouseExited

    private void jButtonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonHapusActionPerformed

    private void TextFieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldSearchActionPerformed

    private void TextFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextFieldSearchKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldSearchKeyReleased

    private void TextFieldIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldIDActionPerformed

    private void TextFieldIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextFieldIDKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldIDKeyReleased

    private void TextFieldPenerbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldPenerbitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldPenerbitActionPerformed

    private void TextFieldPenerbitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextFieldPenerbitKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldPenerbitKeyReleased

    private void TextFieldISBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldISBNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldISBNActionPerformed

    private void TextFieldISBNKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextFieldISBNKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldISBNKeyReleased

    private void TextFieldJudulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldJudulActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldJudulActionPerformed

    private void TextFieldJudulKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextFieldJudulKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldJudulKeyReleased

    private void TextFieldBahasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldBahasaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldBahasaActionPerformed

    private void TextFieldBahasaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextFieldBahasaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldBahasaKeyReleased

    private void TextFieldPengarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldPengarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldPengarangActionPerformed

    private void TextFieldPengarangKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextFieldPengarangKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldPengarangKeyReleased

    private void jButtonKategoriMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonKategoriMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonKategoriMouseMoved

    private void jButtonKategoriMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonKategoriMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonKategoriMouseExited

    private void jButtonKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonKategoriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonKategoriActionPerformed

    private void jButtonBatal2MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBatal2MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonBatal2MouseMoved

    private void jButtonBatal2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBatal2MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonBatal2MouseExited

    private void jButtonBatal2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBatal2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonBatal2ActionPerformed

    private void jButtonSimpanMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSimpanMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonSimpanMouseMoved

    private void jButtonSimpanMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSimpanMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonSimpanMouseExited

    private void jButtonSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSimpanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonSimpanActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelMain;
    private javax.swing.JTextField TextFieldBahasa;
    private javax.swing.JTextField TextFieldID;
    private javax.swing.JTextField TextFieldISBN;
    private javax.swing.JTextField TextFieldJudul;
    private javax.swing.JTextField TextFieldPenerbit;
    private javax.swing.JTextField TextFieldPengarang;
    private javax.swing.JTextField TextFieldSearch;
    private javax.swing.JPanel dataBuku;
    private javax.swing.JPanel dataBuku4;
    private javax.swing.JButton jButtonBatal;
    private javax.swing.JButton jButtonBatal2;
    private javax.swing.JButton jButtonHapus;
    private javax.swing.JButton jButtonKategori;
    private javax.swing.JButton jButtonSimpan;
    private javax.swing.JButton jButtonTambah;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTableBuku;
    private javax.swing.JPanel panelAdd;
    // End of variables declaration//GEN-END:variables

    private void loadData() {
        getData((DefaultTableModel) jTableBuku.getModel());
        if (jButtonTambah.getText().equalsIgnoreCase("UBAH")) {
            jButtonTambah.setText("TAMBAH");
            jButtonHapus.setText("HAPUS");
            jButtonBatal.setText("BATAL");

            ImageIcon icon = new ImageIcon(getClass().getResource("/Iamge/IconTambah.png"));
            jButtonTambah.setIcon(icon);
        }
        jButtonHapus.setVisible(false);
        jButtonBatal.setVisible(false);
        jLabel1.requestFocus();
    }

    private void showPanel() {
        PanelMain.removeAll();
        PanelMain.repaint();
        PanelMain.revalidate();
        PanelMain.add(dataBuku);
        PanelMain.repaint();
        PanelMain.revalidate();
    }

    private void kosongkanForm() {
        TextFieldID.setText("");
        TextFieldISBN.setText("");
        TextFieldJudul.setText("");
        TextFieldBahasa.setText("");
        TextFieldPengarang.setText("");
        TextFieldPenerbit.setText("");
    }

    private void setTabelModel() {
        DefaultTableModel model = (DefaultTableModel) jTableBuku.getModel();
        model.addColumn("ID Buku");
        model.addColumn("ISBN");
        model.addColumn("Judul");
        model.addColumn("Kategori");
        model.addColumn("Bahasa");
        model.addColumn("Pengarang");
        model.addColumn("Penerbit");
    }

    private void getData(DefaultTableModel model) {
        model.setRowCount(0);
        EntityManagerFactory emf = null;
        EntityManager em = null;

        try {
            emf = Persistence.createEntityManagerFactory("JendelaKampusPU");
            em = emf.createEntityManager();
            em.getTransaction().begin();

            TypedQuery<Buku> querySelectAll = em.createNamedQuery("Buku.findAll", Buku.class);
            List<Buku> results = querySelectAll.getResultList();

            for (Buku buku : results) {
                model.addRow(new Object[]{
                    buku.getIdBuku(),
                    buku.getIsbn(),
                    buku.getJudul(),
                    buku.getBahasa(),
                    //                    buku.getKategoriCollection(),
                    buku.getPenerbit(),
                    buku.getPengarang()});
            }

            em.getTransaction().commit();

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (em != null) {
                em.close();
            }
            if (emf != null) {
                emf.close();
            }
        }
    }

    private String setIDBuku() {
        EntityManager em = Persistence.createEntityManagerFactory("JendelaKampusPU").createEntityManager();
        String jpql = "SELECT SUBSTRING(p.idBuku, LENGTH(p.idBuku) - 2) AS nomor "
                + "FROM Buku p WHERE p.idBuku LIKE 'PG%' ORDER BY p.idBuku DESC";
        TypedQuery<String> query = em.createQuery(jpql, String.class);
        query.setMaxResults(1);

        String urutan = "";
        try {
            String lastNumber = query.getSingleResult().replaceAll("[^\\d]", "");
            int nextNumber = Integer.parseInt(lastNumber) + 1;
            urutan = "PG" + String.format("%02d", nextNumber);

        } catch (Exception e) {
            // Tangani kesalahan dengan lebih baik
            e.printStackTrace();
        } finally {
            em.close();
        }

        return urutan;
    }

    private void insertData() {
        String id_buku = TextFieldID.getText().trim();
        String isbn = TextFieldISBN.getText();
        String judul = TextFieldJudul.getText();
        String bahasa = TextFieldBahasa.getText();
        String pengarang = TextFieldPengarang.getText();
        String penerbit = TextFieldPenerbit.getText();
        String jenis;

        if (id_buku.isEmpty() || isbn.isEmpty() || judul.isEmpty() || bahasa.isEmpty() || pengarang.isEmpty() || penerbit.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua kolom harus diisi", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        EntityManager em = Persistence.createEntityManagerFactory("JendelaKampusPU").createEntityManager();

        try {
            em.getTransaction().begin();

            Buku b = new Buku();
            b.setIdBuku(id_buku);
            b.setIsbn(isbn);
            b.setJudul(judul);
            b.setBahasa(bahasa);
            b.setPenerbit(penerbit);
            b.setPengarang(pengarang);
            b.setKategoriCollection((Collection<Kategori>) kategoriCollection);

            em.getTransaction().commit();

            JOptionPane.showMessageDialog(this, "Data Berhasil Disimpan", "Sukses", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            em.getTransaction().rollback();
            JOptionPane.showMessageDialog(this, "Data Gagal Disimpan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            em.close();
        }

        kosongkanForm();
        loadData();
        showPanel();
    }

    private void dataTabel() {
        PanelMain.setVisible(false);
        panelAdd.setVisible(true);

        int row = jTableBuku.getSelectedRow();
        jLabel2.setText("Perbarui Data Pengguna");
        TextFieldID.setEnabled(false);

        TextFieldID.setText(jTableBuku.getValueAt(row, 0).toString());
        TextFieldISBN.setText(jTableBuku.getValueAt(row, 1).toString());
        TextFieldJudul.setText(jTableBuku.getValueAt(row, 2).toString());
        TextFieldBahasa.setText(jTableBuku.getValueAt(row, 3).toString());
        TextFieldPengarang.setText(jTableBuku.getValueAt(row, 4).toString());
        TextFieldPenerbit.setText(jTableBuku.getValueAt(row, 5).toString());
    }

    private void updateData() {
        String id_buku = TextFieldID.getText().trim();
        String isbn = TextFieldISBN.getText();
        String judul = TextFieldJudul.getText();
        String bahasa = TextFieldBahasa.getText();
        String pengarang = TextFieldPengarang.getText();
        String penerbit = TextFieldPenerbit.getText();

        if (id_buku.isEmpty() || isbn.isEmpty() || judul.isEmpty() || bahasa.isEmpty() || pengarang.isEmpty() || penerbit.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua kolom harus diisi", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        EntityManagerFactory emf = Persistence.createEntityManagerFactory("UASPBOPU");
        EntityManager em = emf.createEntityManager();

        try {

            Buku b = new Buku();
            b.setIdBuku(id_buku);
            b.setIsbn(isbn);
            b.setJudul(judul);
            b.setBahasa(bahasa);
            b.setPenerbit(penerbit);
            b.setPengarang(pengarang);
            b.setKategoriCollection((Collection<Kategori>) kategoriCollection);

            em.getTransaction().begin();
            em.merge(b);
            em.getTransaction().commit();

            JOptionPane.showMessageDialog(this, "Data Berhasil Diperbarui", "Sukses", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            em.getTransaction().rollback();
            JOptionPane.showMessageDialog(this, "Data Gagal Diperbarui: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);

        } finally {
            if (em != null && em.isOpen()) {
                em.close();
            }
            kosongkanForm();
            loadData();
            showPanel();

        }
    }

    private void hapusData() {
        int selectedRow = jTableBuku.getSelectedRow();
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah anda yakin ingin menghapus data?",
                "Konfirmasi Hapus Data", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            String id = TextFieldID.getText().trim();
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("JendelaKampusPU");
            EntityManager em = emf.createEntityManager();
            try {
                em.getTransaction().begin();
                Buku b = new Buku();
                b.setIdBuku(id);
                em.remove(b);
                em.getTransaction().commit();

                JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus");
            } catch (Exception e) {
                em.getTransaction().rollback();
                JOptionPane.showMessageDialog(this, "Data Gagal Dihapus");
            } finally {
                em.close();
            }
            kosongkanForm();
            loadData();
            showPanel();
        }
    }

    private void searchData() {
        try {
            String selection = (String) jComboBox1.getSelectedItem();
            String searchTerm = TextFieldSearch.getText();

            // Building the JPA query dynamically based on the selected criteria
            String queryString = "SELECT p FROM Pengguna p WHERE ";

            switch (selection.toLowerCase()) {
                case "ID Buku":
                    queryString += "LOWER(p.idBuku) LIKE LOWER(:searchTerm)";
                    break;
                case "ISBN":
                    queryString += "LOWER(p.isbn) LIKE LOWER(:searchTerm)";
                    break;
                case "Judul":
                    queryString += "LOWER(p.judul) LIKE LOWER(:searchTerm)";
                    break;
                case "Bahasa":
                    queryString += "LOWER(p.bahasa) LIKE LOWER(:searchTerm)";
                    break;
                case "Pengarang":
                    queryString += "LOWER(p.pengarang) LIKE LOWER(:searchTerm)";
                    break;
                case "Penerbit":
                    queryString += "LOWER(p.penerbit) LIKE LOWER(:searchTerm)";
                    break;
                case "Kategori":
                    queryString += "LOWER(p.kategori) LIKE LOWER(:searchTerm)";
                default:
                    queryString += "LOWER(p.idBuku) LIKE LOWER(:searchTerm)"
                            + " OR LOWER(p.isbn) LIKE LOWER(:searchTerm)"
                            + " OR LOWER(p.judul) LIKE LOWER(:searchTerm)"
                            + " OR LOWER(p.bahasa) LIKE LOWER(:searchTerm)"
                            + " OR LOWER(p.pengarang) LIKE LOWER(:searchTerm)"
                            + " OR LOWER(p.penerbit) LIKE LOWER(:searchTerm)"
                            + " OR LOWER(p.kategori) LIKE LOWER(:searchTerm)";
                    break;
            }
            DefaultTableModel model = (DefaultTableModel) jTableBuku.getModel();
            model.setRowCount(0);

            EntityManager em = null;
            try {
                EntityManagerFactory emf = Persistence.createEntityManagerFactory("JendelaKampusPU");
                em = emf.createEntityManager();

                TypedQuery<Buku> query = em.createQuery(queryString, Buku.class);
                query.setParameter("searchTerm", "%" + searchTerm + "%");

                List<Buku> results = query.getResultList();

                for (Buku buku : results) {
                    // Tambahkan baris ke model berdasarkan data pengguna
                    model.addRow(new Object[]{
                        buku.getIdBuku(),
                        buku.getIsbn(),
                        buku.getJudul(),
                        buku.getPengarang(),
                        buku.getPenerbit(),
                        buku.getKategoriCollection()});
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            } finally {
                if (em != null && em.isOpen()) {
                    em.close();
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }
}
